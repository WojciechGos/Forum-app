<div class="container-fluid">
    <div class="container d-flex justify-content-between">
        <div class="row ">
            <div class="col">
    
                <label for="">Tytuł</label>
            </div>
            <div class="col">
    
                <input class="mb-3" type="text" name="title" id="input_title">
            </div>
    
        </div>
        <div class="row">
            <div class="col">
                <label for="">Wątek</label>
            </div>
            <div class="col">
    
                <%- include('dropdown_thread_menu') %>
            </div>
        </div>
    </div>
    <div class="mb-3">
    
        <div class="container-fluid" style="width:100%;" id="createPostForm" contenteditable="true" name="content">
            <div><br></div>
            <div><br></div>
            <div><br></div>
            <div><br></div>
            <div><br></div>
        </div>
    </div>
    <button  class="btn btn-primary" id="entrySubmitBtnId">Dodaj Post</button>


</div>



<script>
    let editableDiv = document.getElementById('createPostForm')
    let title = document.getElementById('input_title')
    let thread = document.getElementById('dropdownMenuLink')
    const entrySubmit = document.getElementById('entrySubmitBtnId')

    editableDiv.addEventListener('paste', (e) => {
        // setTimeout is for getElements after paste, not in pending
        setTimeout(() => {
            let collection = editableDiv.getElementsByTagName('img')
            for (item of collection) {
                item.classList.add('img-fluid')
                console.log(item)
            }
        }, 0)
    })
    entrySubmit.addEventListener('click', function (event) {
        console.log("pyk")
        let formData = new FormData()
        // security problem 
        // replace innerHTML or smt
        // I use editableDiv.innerHtml because I want have acces 
        // to image's sources.
        formData.append('content', editableDiv.innerHTML)
        formData.append('title', title.value)
        formData.append('thread', thread.textContent)
        console.log(formData.values)
        fetch("entry", {
            method: 'post',
            body: formData
        }).then(response => {
            return response.json()
        }).then(json => {
            console.log(json)
        }).catch(error => {
            console.error(error)
        })
    })
</script>